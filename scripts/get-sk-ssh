#!/usr/bin/env sh

set -eu

default_color=$(tput sgr 0)
red="$(tput setaf 1)"
yellow="$(tput setaf 3)"
green="$(tput setaf 2)"
blue="$(tput setaf 4)"

info() {
	printf "%s==> %s%s\n" "$blue" "$1" "$default_color"
}

success() {
	printf "%s==> %s%s\n" "$green" "$1" "$default_color"
}

error() {
	printf "%s==> %s%s\n" "$red" "$1" "$default_color"
}

warning() {
	printf "%s==> %s%s\n" "$yellow" "$1" "$default_color"
}

success 'selecting security key'
serial=$(ykman list -s | fzf --header='select security key' --height=20% --select-1)

if [ -z "${serial:-}" ]; then
	error 'no security key available'
	exit 1
fi

warning "selected key with serial: ${serial}; make sure you touch this key when extracting resident keys"

(
	keydir=~/.ssh/sk/"${serial}"

	rm -rf "${keydir}" 1>/dev/null 2>&1 || true
	mkdir -p "${keydir}"
	cd "${keydir}"

	warning 'extracting resident public keys from yubikey, pin will be required'
	ssh-keygen -K

	success 'registering keys with ssh agent'
	find . -type f -not -name '*.pub' -exec ssh-add {} \;

	success 'selecting default ssh key'
	selected=$(fd --unrestricted --exclude '*.pub' | fzf --header='select default key' --height=20% --select-1)

	success "updating default security key to: ${selected}"
	ln -fs "$(readlink -f "${keydir}"/"${selected}")" ~/.ssh/id_default_sk
	ln -fs "$(readlink -f "${keydir}"/"${selected}".pub)" ~/.ssh/id_default_sk.pub
)

public_key=$(cat ~/.ssh/id_default_sk.pub)

info "adding default key to allowed signers file"
touch ~/.ssh/.git_allowed_signers
grep -q "${public_key}" ~/.ssh/.git_allowed_signers || echo "${public_key}" >>~/.ssh/.git_allowed_signers
